//neato -Tsvg -oNodeProgram.svg NodeProgramFlowchart.dot && open NodeProgram.svg

digraph G {

	// Action nodes
	{
		node[shape=octagon, style=filled, fillcolor="/orrd9/1:/orrd9/3", gradientangle=270];
	



	register [label="Hub.Register"];
	
	newPi [label="NewPi"];

	newRemoteHub [label="NewRemoteHub"];
	
	saveSettings [label="Pi.saveSettings"];
	
	saveWeather [label="Pi.saveWeather"];
	
	init [label="init"];

	getMoisture [label="Pi.getMoisture"];

	run [label="Pi.runPump"];

	stop [label="Pi.stopPump"];

	routineCheck [label="Pi.RoutineCheck"];

	connectTo [label="Pi.ConnectTo"];

	fetchData [label="Pi.fetchData"];
	
	updateConfig [label="Pi.UpdateConfig"];
			
	updateWeather [label="Pi.UpdateWeather"];
		
	getHistory [label="Pi.GetHistory"];

	}

	// Other nodes
	{
		node[shape=note, style=filled, fillcolor="", gradientangle=270];
		
		"LOG \n FILE"
		
	}
	
	{
		node[shape=doublecircle, style=filled, fillcolor="/rdpu9/1:/rdpu9/3", gradientangle=270];
		
	"Websocket \n connection"
	}

	// Separate GO routines
	{
		node[shape=ellipse, style=filled, fillcolor="/blues9/1:/blues9/3", gradientangle=270]
		
		routineCheck [label="Pi.RoutineCheck"];
		histToFile [label="Pi.histToFile"];
		"Message handling"

		
	}
	
	// Flow chart graph data
	overlap=false;
	splines=true;
	START -> "newPi"
	"newPi" -> "newRemoteHub" [label="Address"]
	"newPi" -> "init"
	"register" -> "Message handling" 
	"newRemoteHub" -> "connectTo" [label="Hub"]
	"newRemoteHub" -> "newPi" [label="Hub" ]
	"connectTo" -> "register" [label="Pi"]
	"connectTo" -> "routineCheck" 
	"connectTo" -> "histToFile" 
	"histToFile" -> "LOG \n FILE" 
	"LOG \n FILE" -> "getHistory" 
	"getHistory" -> "LOG \n FILE" 
	"Message handling" -> "getHistory" [label="from:, to:" ]
	"getHistory" -> "register" 
	"Message handling" -> "Websocket \n connection" 
	"Websocket \n connection" -> "Message handling" 
	"histToFile" -> "fetchData" 
	"fetchData" -> "histToFile" [label = "Data"]
	"updateConfig" -> "run" [label="until"]
	"run" -> "stop"
	"routineCheck" -> "routineCheck" 
	"routineCheck" -> "getMoisture"
	"getMoisture" -> "routineCheck" [label="Moisture"]
	"Message handling" -> "updateConfig" [label="Settings"]
	"Message handling" -> "updateWeather" [label="Weather"]
	"updateConfig" -> "saveSettings" 
	"updateWeather" -> "saveWeather" 
	
	
	//“User logs in" -> "First log in?"
	//“First log in?" -> "Display configuration GUI" [label="Yes"]
	
}