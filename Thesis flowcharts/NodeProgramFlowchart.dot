//dot -Tsvg -oNodeProgram.svg NodeProgramFlowchart.dot

digraph G {

	// Action nodes
	{
		node[shape=octagon, style=filled, fillcolor="/orrd9/1:/orrd9/3", gradientangle=270];
	



	register [label="Hub.Register(p common.Pi)"];
	
	newPi [label="New() *Pi"];

	newRemoteHub [label="NewRemoteHub(address) (hub, error)"];
	
	saveSettings [label="Pi.saveSettings()"];
	
	saveWeather [label="Pi.saveWeather()"];
	
	init [label="init()"];

	getMoisture [label="Pi.getMoisture() (float)"];

	run [label="Pi.runPump(until)"];

	stop [label="Pi.stopPump()"];

	routineCheck [label="Pi.RoutineCheck()"];

	connectTo [label="Pi.ConnectTo(hub)"];

	fetchData [label="Pi.fetchData() common.Data"];
	
	updateConfig [label="Pi.UpdateConfig(configuration)"];
			
	updateWeather [label="Pi.UpdateWeather(weather)"];
		
	getHistory [label="Pi.GetHistory(from, to) []common.Data"];

	}

	// Other nodes
	{
		node[shape=square, style=filled, fillcolor="/rdpu9/1:/rdpu9/3", gradientangle=270];
		
		"LOG \n FILE"
		"Websocket \n connection"
	}

	// Separate GO routines
	{
		node[shape=ellipse, style=filled, fillcolor="/blues9/1:/blues9/3", gradientangle=270]
		
		routineCheck [label="Pi.RoutineCheck()"];
		histToFile [label="Pi.histToFile()"];
		"Listen for messages"

		
	}
	
	// Flow chart graph data
	"newPi" -> "newRemoteHub"
	"newPi" -> "init"
	"register" -> "Listen for messages"
	"newRemoteHub" -> "connectTo"
	"connectTo" -> "register"
	"connectTo" -> "routineCheck"
	"connectTo" -> "histToFile"
	"histToFile" -> "LOG \n FILE"
	"LOG \n FILE" -> "getHistory"
	"getHistory" -> "LOG \n FILE"
	"Listen for messages" -> "getHistory"
	"getHistory" -> "register"
	"register" -> "Websocket \n connection"
	"Websocket \n connection" -> "register"
	"histToFile" -> "fetchData"
	"fetchData" -> "histToFile"
	"routineCheck" -> "run"
	"run" -> "stop"
	"routineCheck" -> "routineCheck"
	"routineCheck" -> "getMoisture"
	"getMoisture" -> "routineCheck"
	"Listen for messages" -> "updateConfig"
	"Listen for messages" -> "updateWeather"
	"updateConfig" -> "saveSettings"
	"updateWeather" -> "saveWeather"
	
	
	//“User logs in" -> "First log in?"
	//“First log in?" -> "Display configuration GUI" [label="Yes"]
	
}